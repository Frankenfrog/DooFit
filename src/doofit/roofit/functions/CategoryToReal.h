/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef DOOFIT_ROOFIT_FUNCTIONS_CATEGORYTOREAL
#define DOOFIT_ROOFIT_FUNCTIONS_CATEGORYTOREAL

#include "RooAbsReal.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"

namespace doofit {
namespace roofit {
namespace functions {

class CategoryToReal : public RooAbsReal {
public:
  CategoryToReal() {} ; 
  CategoryToReal(std::string name,
	      RooAbsCategory& _category_);
  CategoryToReal(const CategoryToReal& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new CategoryToReal(*this,newname); }
  inline virtual ~CategoryToReal() { }

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

protected:

  RooCategoryProxy category_ ;
  
  Double_t evaluate() const ;

private:

  ClassDef(CategoryToReal,1) // Your description goes here...
};

}
}
}

#endif
