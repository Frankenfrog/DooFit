/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef FUNCTIONSIMPLESIGNEDCOEFFICIENT
#define FUNCTIONSIMPLESIGNEDCOEFFICIENT

#include "RooAbsReal.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"

namespace doofit {
namespace roofit {
namespace functions {
 
class FunctionSimpleSignedCoefficient : public RooAbsReal {
public:
  FunctionSimpleSignedCoefficient() {} ; 
  FunctionSimpleSignedCoefficient(const char *name, const char *title,
	      RooAbsReal& _mistag_,
	      RooAbsReal& _coeff_,
	      RooAbsReal& _sign_,
	      RooAbsCategory& _tag_);
  FunctionSimpleSignedCoefficient(const FunctionSimpleSignedCoefficient& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new FunctionSimpleSignedCoefficient(*this,newname); }
  inline virtual ~FunctionSimpleSignedCoefficient() { }

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

protected:

  RooRealProxy mistag_ ;
  RooRealProxy coeff_ ;
  RooRealProxy sign_ ;
  RooCategoryProxy tag_ ;
  
  Double_t evaluate() const ;

private:

  ClassDef(FunctionSimpleSignedCoefficient,1) // Your description goes here...
};

}
}
}
 
#endif
