/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef DOOFIT_ROOFIT_FUNCTIONS_FUNCTIONSUM
#define DOOFIT_ROOFIT_FUNCTIONS_FUNCTIONSUM

// from STL
#include <string>

#include "RooAbsReal.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"

namespace doofit {
namespace roofit {
namespace functions {

class FunctionSum : public RooAbsReal {
public:
  FunctionSum() ;
  FunctionSum(std::string name,
                  RooAbsReal& _par_addend1,
                  RooAbsReal& _par_addend2);
  
  FunctionSum(std::string name,
                  RooAbsReal& _par_addend1,
                  RooAbsReal& _par_addend2,
                  RooAbsReal& _par_addend3);
  
  FunctionSum(const FunctionSum& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new FunctionSum(*this,newname); }
  inline virtual ~FunctionSum() {
    std::cout << "FunctionSum::~FunctionSum(): num calls " << num_calls_ << std::endl;
  }
  
protected:

  RooRealProxy par_addend1 ;
  RooRealProxy par_addend2 ;
  RooRealProxy par_addend3 ;
  
  const int num_addends ;
  
  mutable long long num_calls_;
  
  virtual Int_t	getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars,
                                      const char* rangeName = 0) const;
  
  inline Double_t evaluate() const {
    // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE
    //++num_calls_;
    if (num_addends == 2) {
      //std::cout << par_addend1+par_addend2 << std::endl;
      return par_addend1+par_addend2;
    }
    if (num_addends == 3) {
      return par_addend1+par_addend2+par_addend3;
    }
  }
  
private:

  ClassDef(FunctionSum,1) // Your description goes here...
};
} // namespace functions
} // namespace roofit
} // namespace doofit

#endif
